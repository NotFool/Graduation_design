struct bt_gatt_server* server
*server = user_data
uint16_t handle
handle = 0
struct async_write_op* op
*op = NULL
if (length < 2)
authorize_req(server, opcode, handle)
uint8_t ecode
if (ecode)
handle = get_le16(pdu)
struct gatt_db_attribute* attr
attr = gatt_db_get_attribute(server->db, handle)
if (!attr)
util_debug(server->debug_callback, server->debug_data,
				"Write %s - handle: 0x%04x",
				(opcode == BT_ATT_OP_WRITE_REQ) ? "Req" : "Cmd",
				handle)
check_length(length, 0)
if (ecode)
check_permissions(server, attr, BT_ATT_PERM_WRITE_MASK)
if (ecode)
op->chan = chan
op->server = bt_gatt_server_ref(server)
op->opcode = opcode
if (gatt_db_attribute_write(attr, 0, pdu + 2, length - 2, opcode,
							server->att,
							write_complete_cb, op))
static void async_write_op_destroy(struct async_write_op *op)
{
	bt_gatt_server_unref(op->server);
	free(op);
}
bt_gatt_server_unref(op->server)
async_write_op_destroy(op)